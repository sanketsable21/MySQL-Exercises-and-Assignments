-- USE THE NEWLY CREATED DATABASE FOR SUBSEQUENT OPERATIONS
USE DEMOJOINS;

/*
IN MYSQL JOINS ARE USED TO COMBINE ROWS FROM TWO OR MORE TABLES BASED ON A RELATED COLUMN BETWEEN THEM. JOINS ALLOW YOU TO RETRIEVE DATA FROM MULTIPLE TABLES 
IN A SINGLE QUERY, MAKING IT EASIER TO WORK WITH RELATIONAL DATABASES.

1. INNER JOIN:
	- DEFINITION: THE INNER JOIN KEYWORD SELECTS RECORDS THAT HAVE MATCHING VALUES IN BOTH TABLES. 
    - PURPOSE: TO RETRIEVE ONLY THE ROWS WHERE THERE IS A MATCH IN BOTH TABLES, EFFECTIVELY FILTERING OUT NON MATCHING ROWS
    
    - EXAMPLE: 
    SELECT A.EMPLOYEEID, A.NAME, B.DEPARTMENTNAME
    FROM EMPLOYEES A 
    INNER JOIN DEPARTMENTS B ON A.DEPARTMENTID = B.DEPARTMENTID;
    
2. LEFT JOIN ( OR LEFT OUTER JOIN ):
	- DEFINITION: THE LEFT JOIN KEYWORD RETURNS ALL RECORDS FROM THE LEFT TABLE AND THE MATCHED RECORDS FROM THE RIGHT TABLE.
    - PURPOSE: TO RETRIEVE ALL RECORDS FROM THE LEFT TABLE REGARDLESS OF WHETHER THERE IS A MATCH IN THE RIGHT TABLE, ALLOWING FOR NULL 
    VALUES IN THE RESULT SET FOR NON-MATCHING ROWS.
    
    - EXAMPLE:
    SELECT A.EMPLOYEEID, A.NAME, B.DEPARTMENTNAME
    FROM EMPLOYEES A 
    LEFT JOIN DEPARTMENTS B ON A.DEPARTMENTID = B.DEPARTMENTID;
    
3. RIGHT JOIN ( OR RIGHT OUTER JOIN ):
	- DEFINITION: THE RIGHT JOIN KEYWORD RETURNS ALL RECORDS FROM THE RIGHT TABLE AND THE MATCHED RECORDS FROM THE LEFT TABLE.
    - PURPOSE: TO RETRIEVE ALL RECORDS FROM THE RIGHT TABLE REGARDLESS OF WHETHER THERE IS A MATCH IN THE LEFT TABLE, ALLOWING FOR NULL 
    VALUES IN THE RESULT SET FOR NON-MATCHING ROWS.
    
    - EXAMPLE:
    SELECT A.EMPLOYEEID, A.NAME, B.DEPARTMENTNAME
    FROM EMPLOYEES A 
    RIGHT JOIN DEPARTMENTS B ON A.DEPARTMENTID = B.DEPARTMENTID;
    
4. FULL JOIN ( OR OUTER FULL JOIN ):
	- DEFINITION: THE NULL JOIN KEYWORD RETURNS ALL RECORDS WHEN THERE IS A MATCH IN EITHER LEFT OR RIGHT TABLE RECORDS.
    - PURPOSE: TO RETRIEVE ALL RECORDS FROM BOTH TABLES, INCLUDING THOSE THAT DO NOT HAVE MATCHES IN EITHER TABLE. MYSQL DOES NOT SUPPORT FULL 
    JOIN DIRECTLY, BUT IT CAN BE STIMULATED USING A COMBINATION OF LEFT JOIN AND RIGHT JOIN WITH A UNION.
    
    - EXAMPLE:
	SELECT A.EMPLOYEEID, A.NAME, B.DEPARTMENTNAME
    FROM EMPLOYEES A
    LEFT JOIN DEPARTMENTS B ON A.DEPARTMENTID = B.DEPARTMENTID 
    UNION
	SELECT A.EMPLOYEEID, A.NAME, B.DEPARTMENTNAME
    FROM EMPLOYEES A 
    RIGHT JOIN DEPARTMENTS B ON A.DEPARTMENTID = B.DEPARTMENTID;
*/


